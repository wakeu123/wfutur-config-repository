# APPLICATION
info:
  name: ${spring.application.name}
  version: ${version}

wfutur:
  date:
    formats: dd/MM/yyyy,dd-MM-yyyy,dd.MM.yyyy,dd/MM/yy,dd-MM-yy,dd.MM.yy,dd/M/yy,dd/M/yyyy,dd/M yyyy,dd/M -yy,dd/M yy,dd-M-yy,dd.M.yyyy,dd.M.yy,dd. M. yy,dd/MM/yy,dd-MM-yy,dd.MM.yy,MM/dd/yyyy,MM-dd-yyyy,M/dd/yyyy,M/dd/yy,M-dd-yy,yyyy/MM/dd,yyyy-MM-dd,yyyyMMdd,yy/MM/dd,yy-MM-dd,yy MM dd
  protocol: https
  language: en
  languages: en,fr


gateway:
  host: ${wfutur.protocol}
  port: 9000
  protocol: http

# HTTP SESSION TIMEOUT
server:
  servlet:
    session:
      timeout: 2h

# EUREKA
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${DISCOVERY_SERVER_URL:http://localhost:8761/eureka}
  protocol: http
  instance:
    hostname: localhost
    health-check-url-path: /actuator/health
    leaseRenewalIntervalInSeconds: 10
    prefer-ip-address: true

management:
  endpoint:
    health:
      show-details: always
    logfile:
      external-file: ${logging.file.name}
  endpoints:
    web:
      exposure:
        include: "*"


# KEYCLOAK
oauth2:
  base:
    url: http://localhost:8181

keycloak:
  enabled: true
  realm: wfutur_realm
  resource: wfutur
  credentials:
    secret: V4ACf3ONVXF4kUA22hHvCHo8fp9xDlx0
  auth-server-url: ${oauth2.base.url}/realm
  always-refresh-token: true
  cors: true
  cors-max-age: 0
  cors-allowed-methods: '*'
  cors-allowed-headers: '*'
  cors-exposed-headers: '*'
  principal-attribute: preferred_username

  # HIBERNATE && OAUTH2
  spring:
    cloud:
      config:
        enable: true
    datasource:
      username: postgres
      url: jdbc:postgresql://localhost:5432/
      driver-class-name: org.postgresql.Driver
      hikari:
        idle-timeout: 10000
        leak-detection-thleshold: 3000
        max-lifetime: 30000
        maximum-pool-size: 3
        minimum-idle: 0
        connection-timeout: 60000
      password: 123456
    jpa:
      database: postgresql
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        ddl-auto: none


    security:
      oauth2:
        client:
          registration:
            keycloak:
              client-id:
              client-secret:
                scope: openid
          provider:
            keycloak:
              issuer-uri: ${oauth2.base.url/realms/${keycloak.realm}
              user-name-attribute: preferred_username
        resourceserver:
          jwt:
            issuer-uri: ${oauth2.base.url}/realms/${keycloak.realm}
            jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

# LOGGING
logging:
  file:
    name: //${user.home}./wfutur/3/logs/${spring.application.name}-logs.log
  level:
    root: INFO
    com.axion.wfutur: ERROR
    org.springframework: ERROR
    org.hibernate: ERROR
    org.flywaydb: ERROR
    com.netflix: ERROR
    org.apache: ERROR
  logback:
    rollingpolicy:
      max-file-size: 1MB
      max-history: 50
